{
    "youtube": [
        {
            "title": "Next js 강좌 #1 소개, 페이지 레이아웃 (Intro, Page layout)",
            "link": "https://youtu.be/Ujjdn2wMIew?si=E85oguOubdjMuzPz",
            "displayLink": "ko.legacy.reactjs.org",
            "snippet": "Next js 강좌 #1 소개, 페이지 레이아웃 (Intro, Page layout)",
            "pagemap": {
                "cse_thumbnail": [
                    {
                        "src": "https://i.ytimg.com/vi/Ujjdn2wMIew/mqdefault.jpg",
                        "width": "310",
                        "height": "163"
                    }
                ]
            }
        },
        {
            "title": "Next js 강좌 #2 Dynamic Routes, next/link",
            "link": "https://youtu.be/W4gWRK-_It8?si=fZmfeeyu_C96_7Eq",
            "displayLink": "ko.legacy.reactjs.org",
            "snippet": "안녕하세요. 코딩앙마 입니다 :) React Framework 인 Next.js 강좌 시작합니다. React, HTML, CSS 에 어느정도 기초 지식이 있으신 분들 대상으로 진행합니다. 이번 수업에서는 Axios 를 이용해 api 를 호출하고 받아온 데이터를 화면에 그려주는 작업을 진행합니다. 사용된 api 는http://makeup-api.herokuapp.com/api/v1/products.json?brand=maybelline 입니다. React hook(useEffect, useState)을 사용해 마운트 시점에 api를 호출하고, 상태관리를 해봅니다. Next js 의 Dynamic Routes 를 이용해서 상품 ID가 달라도 하나의 페이지로 관리하고, next/link 를 이용해 새로고침 없이 페이지간 이동을 할 수 있습니다. 그 외 map 을 이용한 순회, module CSS 등은 영상을 통해 확인해주세요!\n감사합니다",
            "pagemap": {
                "cse_thumbnail": [
                    {
                        "src": "https://i.ytimg.com/vi/W4gWRK-_It8/mqdefault.jpg",
                        "width": "310",
                        "height": "163"
                    }
                ]
            }
        },
        {
            "title": "Next js 강좌 #3 서버사이드 렌더링 (Server-side Rendering/SSR/Dynamic Rendering)",
            "link": "https://youtu.be/hvkeK71WXb8?si=yhUFMl6ODT4xUzAJ",
            "displayLink": "velog.io",
            "snippet": "안녕하세요. 코딩앙마 입니다 :) React Framework 인 Next.js 강좌 시작합니다. React, HTML, CSS 에 어느정도 기초 지식이 있으신 분들 대상으로 진행합니다. 이번 수업에서는 로딩 화면을 만들고, getServerSideProps 를 이용해서 서버사이드 렌더링(Server-side Rendering/SSR/Dynamic Rendering)을 구현해 보겠습니다. 서버사이드 렌더링은 SEO나 SNS 공유등을 이용할때 필수죠? 정적 생성과의 차이점을 알아보고, 장단점을 비교해볼게요.",
            "pagemap": {
                "cse_thumbnail": [
                    {
                        "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSFLlEj0lHkWn_FJcROHoiwnu7AU0-c_BHBjTtHjAZUJfWVaC4u77TMA_s",
                        "width": "297",
                        "height": "170"
                    }
                ],
                "metatags": [
                    {
                        "twitter:description": "기존에 잘 알려진 UI 패턴을 프런트엔드 개발에 적용하는 과정을 적은 글입니다. 리팩토링하는 과정을 단계별로 쫓아가며 UI 패턴을 실제 리액트 사례에 적용하는 방법을 살펴보고 그 이점을 확인할 수 있습니다 :)"
                    }
                ]
            }
        }
    ],
    "google": [
        {
            "title": "[Node.js] 익스프레스 웹 서버 만들기",
            "link": "https://velog.io/@hahaha/Node.js-%EC%9D%B5%EC%8A%A4%ED%94%84%EB%A0%88%EC%8A%A4-%EC%9B%B9-%EC%84%9C%EB%B2%84-%EB%A7%8C%EB%93%A4%EA%B8%B0",
            "displayLink": "velog.io",
            "snippet": "Oct 10, 2021 ... 서버 제작에 있어 불편함을 해소하고 편의 기능을 추가한 웹 서버 프레임워크http 모듈의 요청과 응답 객체에 추가 기능들을 부여서버 코드에 수정 ...",
            "pagemap": {
                "cse_thumbnail": [
                    {
                        "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQUtW-vLCcudMje-Wb31X6blj4a4VpgUMks5lH3UcIQdj_R_fZLBEwUtRFh",
                        "width": "318",
                        "height": "159"
                    }
                ],
                "metatags": [
                    {
                        "twitter:description": "서버 제작에 있어 불편함을 해소하고 편의 기능을 추가한 웹 서버 프레임워크http 모듈의 요청과 응답 객체에 추가 기능들을 부여서버 코드에 수정 사항이 생길 때마다 서버를 자동으로 재시작rs 명령어를 통해 수동 재시작 가능개발용으로만 사용하는 것을 권장http&#x3A"
                    }
                ]
            }
        },
        {
            "title": "[Node.js] 익스프레스로 웹 서버 만들기 1 - 익스프레스 서버와 미들웨어",
            "link": "https://ahn3330.tistory.com/47",
            "displayLink": "ahn3330.tistory.com",
            "snippet": "Jan 14, 2021 ... 노드로 가장 기본적인 웹 서버를 만드는 법을 알아보고 클라이언트에 응답을 보내 웹 페이지를 띄우는 법을 알아보겠습니다. 목차 익스프레스 서버 ...",
            "pagemap": {
                "cse_thumbnail": [
                    {
                        "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQ6eHXOVoWmA1zZF7MBcoxnPY1oj3rNPn_dPgAJQcLsXpjf9jNbPGmqLgHn",
                        "width": "301",
                        "height": "167"
                    }
                ],
                "metatags": [
                    {
                        "twitter:description": "노드로 가장 기본적인 웹 서버를 만드는 법을 알아보고 클라이언트에 응답을 보내 웹 페이지를 띄우는 법을 알아보겠습니다. 목차 익스프레스 서버 만들기 미들웨어로 클라이언트에 응답 보내기 익스프레스로 서버 만들기 익스프레스 모듈을 사용하기 전에 노드에 기본으로 들어있는 http 모듈을 사용하여 서버를 만드는 법을 보겠습니다. 급하신 분들은 express를 사용한 부분만 봐도 됩니다. var http = require('http'); // 웹 서버 객체 만들기 var server = http.createServer(); // 웹 서버를 시작하여 3000번 포트에서 대기 var port = 3000; server.listen(port, function(){ console.log('웹 서버가 시작되었습니다 %d .."
                    }
                ]
            }
        },
        {
            "title": "TIL 29일차(20240124) 노드 & 익스프레스 기본",
            "link": "https://velog.io/@intellik/TIL-29%EC%9D%BC%EC%B0%A820240124-%EB%85%B8%EB%93%9C-%EC%9D%B5%EC%8A%A4%ED%94%84%EB%A0%88%EC%8A%A4-%EA%B8%B0%EB%B3%B8",
            "displayLink": "velog.io",
            "snippet": "Jan 24, 2024 ... 익스프레스는 미들웨어와 라우팅 메커니즘을 기반으로 작동하며 미들웨어, 라우팅 메커니즘이 정의된 순서대로 실행됩니다. 익스프레스 애플리케이션에서 ...",
            "pagemap": {
                "cse_thumbnail": [
                    {
                        "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTljdFzTpZhZfafYSEbcxuj25xcpWP5jY01NUd8-JkiKUlFsruUAM1D-P0",
                        "width": "150",
                        "height": "84"
                    }
                ],
                "metatags": [
                    {
                        "twitter:description": "Node.js와 express.js 학습을 기록합니다 📝"
                    }
                ]
            }
        },
        {
            "title": "[node(노드)/express(익스프레스)] 1분만에 API 서버 만들기",
            "link": "https://gofogo.tistory.com/25",
            "displayLink": "gofogo.tistory.com",
            "snippet": "Nov 11, 2021 ... 딸기 꼭지 부분을 자세하게 보면 솜털이 가득한데요. 이 부분을 통해 잔류 농약과 이물질이 뭍어 있을 가능성이 크다고 해요. 그래서 이것을 제거하지 ...",
            "pagemap": {
                "cse_thumbnail": [
                    {
                        "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcSu_dD2MZ4N8nKT9gyOSJPYSr1bYe9LkRGIMJsPuQl63ZZq3DKYG7BWZp8",
                        "width": "455",
                        "height": "111"
                    }
                ],
                "metatags": [
                    {
                        "twitter:description": "[node(노드)/express(익스프레스)] 1분만에 API 서버 만들기 [사전 환경] 1.node 설치된 환경을 기준으로 작성되었습니다. 2.vscode 개발환경 기준으로 작성되었습니다. 1.노드가 설치된 환경에서 main.js 파일 생성 2.터미널(terminal)에서 아래 명령어를 입력하여, express 라이브러리를 설치 npm i express 2.아래 코드 작성 const express = require(\"express\"); const app = express(); app.get(\"/\", (req, res) => { res.send(\"call root\"); }); app.get(\"/test\", (req, res) => { res.send(\"call test\"); }); app.listen(3.."
                    }
                ]
            }
        }
    ],
    "naver": [
        {
            "title": "AJAX 사용법 총정리 (axios, jquery, fetch)",
            "link": "https://blog.naver.com/tex02/223268631883",
            "description": "AJAX 사용법 2. Axios를 사용하기 위해서는 먼저 심어야 합니다. 지금 시대 좋은 때 아닙니까 테스트 용도이니 CDN으로 심읍시다. 실제 운영할 때는 직접 다운받아 서버에 인클루드 하는 것이... ",
            "bloggername": "라이트 코딩",
            "bloggerlink": "blog.naver.com/tex02",
            "postdate": "20231123"
        },
        {
            "title": "[node.js] axios 사용법",
            "link": "https://blog.naver.com/lucakim82/222931339083",
            "description": "//http-common.js 파일import axios from axios; export default axios.create({ baseURL: http://~~~, // url 경로 headers: { Content-type: application/json //header 설정 }... ",
            "bloggername": "lucakim82",
            "bloggerlink": "blog.naver.com/lucakim82",
            "postdate": "20221117"
        },
        {
            "title": "axios사용법 fetch와 차이점 백엔드 서버 통신하기 Get 방식",
            "link": "https://blog.naver.com/thvldk0025/222937990606",
            "description": "(아래 비동기 promise,async,await에 관한 노트 참고) fetch() 사용법 fetch함수는 2개의 인자를 받는데... React에서 OpenAPI(유튜브 등) 이용한 통신을 할때 Axios를 주로 사용한다 axios사용법 axios의... ",
            "bloggername": "Front-end notes",
            "bloggerlink": "blog.naver.com/thvldk0025",
            "postdate": "20221125"
        },
        {
            "title": "[react] axios 사용법",
            "link": "https://blog.naver.com/jjjo0o/223221967586",
            "description": "#react #axios AJAX란?(in 제이쿼리) GET, POST 요청할 때 새로고침 없이 데이터 주고받기가 가능... fetch axios란?(in 프레임워크) promise 기반의 HTTP 클라이언트 라이브러리 브라우저와 Node.... ",
            "bloggername": "meraki",
            "bloggerlink": "blog.naver.com/jjjo0o",
            "postdate": "20230926"
        }
    ]
}